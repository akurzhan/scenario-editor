// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.FileUploadView = (function(_super) {
    var $a;

    __extends(FileUploadView, _super);

    function FileUploadView() {
      return FileUploadView.__super__.constructor.apply(this, arguments);
    }

    $a = window.sirius;

    FileUploadView.prototype.tagName = "input";

    FileUploadView.prototype.type = "file";

    FileUploadView.prototype.initialize = function(args) {
      $(this.el).attr('type', 'file');
      $(this.el).attr('name', args.name);
      $(this.el).attr('id', args.id);
      this.parent = args.attach;
      this.events = {
        'change': 'handleFiles'
      };
      return this.render();
    };

    FileUploadView.prototype.render = function() {
      $(this.parent).append(this.el);
      return this;
    };

    FileUploadView.prototype.handleFiles = function() {
      var reader;
      $a.broker.trigger('map:clear_map');
      $a.broker.trigger('map:toggle_tree', true);
      reader = new FileReader();
      reader.onloadend = function(e) {
        var fileText;
        fileText = e.target.result;
        return $a.broker.trigger('map:upload_complete', fileText);
      };
      reader.readAsText(this.el.files[0]);
      return this.$el.attr('value', '');
    };

    return FileUploadView;

  })(Backbone.View);

}).call(this);
