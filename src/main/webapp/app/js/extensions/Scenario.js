// Generated by CoffeeScript 1.3.3
(function() {

  window.sirius.Scenario.from_xml = function(xml) {
    var object_with_id, sc;
    object_with_id = {
      network: {},
      node: {},
      link: {},
      path: {},
      sensor: {}
    };
    sc = window.sirius.Scenario.from_xml1(xml, object_with_id);
    sc.object_with_id = object_with_id;
    if (sc.has('demandprofileset')) {
      _.each(sc.get('demandprofileset').get('demandprofile'), function(demand) {
        return demand.get('link').set('demand', demand);
      });
      sc.get('demandprofileset').set('demand', []);
    }
    if (sc.has('capacityprofileset')) {
      _.each(sc.get('capacityprofileset').get('capacity'), function(capacity) {
        return capacity.get('link').set('capacity', capacity);
      });
      sc.get('capacityprofileset').set('capacity', []);
    }
    if (sc.has('initialdensityprofile')) {
      _.each(sc.get('initialdensityprofile').get('density'), function(density) {
        return density.get('link').set('density', density);
      });
      sc.get('initialdensityprofile').set('density', []);
    }
    if (sc.has('splitratioprofileset')) {
      _.each(sc.get('splitratioprofileset').get('splitratioprofile'), function(splitratios) {
        return splitratios.get('node').set('splitratios', splitratios);
      });
      sc.get('splitratioprofileset').set('splitratios', []);
    }
    return sc;
  };

  window.sirius.Scenario.prototype.initialize = function() {
    this.set('schemaVersion', window.sirius.SchemaVersion);
    this.object_with_id = {
      network: {},
      node: {},
      link: {},
      path: {},
      sensor: {}
    };
    this.set('settings', new window.sirius.Settings());
    return this.set('network', new window.sirius.Network());
  };

  window.sirius.Scenario.prototype.network_with_id = function(id) {
    return this.object_with_id.network[id];
  };

  window.sirius.Scenario.prototype.node_with_id = function(id) {
    return this.object_with_id.node[id];
  };

  window.sirius.Scenario.prototype.link_with_id = function(id) {
    return this.object_with_id.link[id];
  };

  window.sirius.Scenario.prototype.set_network_with_id = function(id, network) {
    if (network) {
      return this.object_with_id.network[id] = network;
    } else {
      return delete this.object_with_id.network[id];
    }
  };

  window.sirius.Scenario.prototype.set_node_with_id = function(id, node) {
    if (node) {
      return this.object_with_id.node[id] = node;
    } else {
      return delete this.object_with_id.node[id];
    }
  };

  window.sirius.Scenario.prototype.set_link_with_id = function(id, link) {
    if (link) {
      return this.object_with_id.link[id] = link;
    } else {
      return delete this.object_with_id.link[id];
    }
  };

  window.sirius.Scenario.prototype.stampSchemaVersion = function() {
    return this.set('schemaVersion', window.sirius.SchemaVersion);
  };

  window.sirius.Scenario.prototype.encode_references = function() {
    var capacityprofileset, demandprofileset, initialdensityprofile, linklist, network, nodelist, splitratioprofileset,
      _this = this;
    demandprofileset = this.get('demandprofileset');
    capacityprofileset = this.get('downstreamboundarycapacityprofileset');
    initialdensityprofile = this.get('initialdensityprofile');
    splitratioprofileset = this.get('splitratioprofileset');
    network = this.get('network');
    if (network) {
      linklist = network.get('linklist');
    }
    if (network) {
      nodelist = network.get('nodelist');
    }
    if (demandprofileset && demandprofileset.has('demand')) {
      demandprofileset.set('demand', []);
    }
    if (capacityprofileset && capacityprofileset.has('capacity')) {
      capacityprofileset.set('capacity', []);
    }
    if (initialdensityprofile && initialdensityprofile.has('density')) {
      initialdensityprofile.set('density', []);
    }
    if (splitratioprofileset && splitratioprofileset.has('splitratios')) {
      splitratioprofileset.set('splitratios', []);
    }
    if (linklist && linklist.has('link')) {
      _.each(linklist.get('link'), function(link) {
        if (link.has('demand')) {
          if (!demandprofileset) {
            _this.set('demandprofileset', new window.sirius.DemandProfileSet());
          }
          if (!demandprofileset.has('demandprofile')) {
            demandprofileset.set('demandprofile', []);
          }
          demandprofileset.get('demandprofile').push(link.get('demand'));
        }
        if (link.has('capacity')) {
          if (!capacityprofileset) {
            _this.set('downstreamboundarycapacityprofileset', new window.sirius.DownstreamBoundaryCapacityProfileSet());
          }
          if (!capacityprofileset.has('capacityprofile')) {
            capacityprofileset.set('capacityprofile', []);
          }
          capacityprofileset.get('capacityprofile').push(link.get('capacity'));
        }
        if (link.has('density')) {
          if (!initialdensityprofile) {
            _this.set('initialdensityprofile', new window.sirius.InitialDensityProfile());
          }
          if (!initialdensityprofile.has('density')) {
            initialdensityprofile.set('density', []);
          }
          return initialdensityprofile.get('density').push(link.get('density'));
        }
      });
      if (nodelist && nodelist.has('node')) {
        return _.each(nodelist.get('node'), function(node) {
          if (node.has('splitratios')) {
            if (!splitratioprofileset) {
              _this.set('splitratioprofileset', new SplitRatioProfileSet());
            }
            if (!splitratioprofileset.has('splitratios')) {
              splitratioprofileset.set('splitratios', []);
            }
            return splitratioprofileset.get('splitratios').push(node.get('splitratios'));
          }
        });
      }
    }
  };

}).call(this);
