// Generated by CoffeeScript 1.3.3
(function() {

  window.sirius.Signal.prototype.defaults = {
    phase: []
  };

  window.sirius.Signal.prototype.resolve_references = window.sirius.ReferenceHelper.resolver('node_id', 'node', 'node', 'signal', 'Signal', true);

  window.sirius.Signal.prototype.encode_references = function() {
    return this.set('node_id', this.get('node').id);
  };

  window.sirius.Signal.prototype.phase_with_nema = function(nema) {
    return _.find(this.get('phase'), function(phase) {
      return phase.get('nema') === nema;
    });
  };

  window.sirius.Signal.prototype.calc_phase_row_col = function() {
    _.each(this.get('phase'), function(ph) {
      var nema;
      nema = ph.get('nema');
      if (nema <= 4) {
        ph.row = 0;
      } else {
        ph.row = 1;
      }
      return ph.set('column', (nema - 1) % 4);
    });
    return _.each(this.get('phase'), function(ph) {
      var alt_ph;
      if (ph.has('lag')) {
        if (nema % 2 === 1) {
          alt_ph = this.phase_with_nema(nema + 1);
          ph.set('column', 1 + ph.get('column'));
          return alt_ph.set('column', alt_ph.get('column') - 1);
        } else {
          return trace("phase cannot have lag=true and nema=" + nema);
        }
      }
    });
  };

}).call(this);
