// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.LayersMenuViewItem = (function(_super) {
    var $a;

    __extends(LayersMenuViewItem, _super);

    function LayersMenuViewItem() {
      return LayersMenuViewItem.__super__.constructor.apply(this, arguments);
    }

    $a = window.sirius;

    LayersMenuViewItem.prototype.tagName = 'li';

    LayersMenuViewItem.prototype.isShowing = true;

    LayersMenuViewItem.prototype.initialize = function(parent, values) {
      var displayText;
      this.parent = parent;
      if (values.triggerShow) {
        this.triggerShow = values.triggerShow;
      }
      if (values.triggerHide) {
        this.triggerHide = values.triggerHide;
      }
      this.template = _.template($('#child-item-menu-template').html());
      displayText = values.label;
      if (values.link) {
        displayText = "" + values.label + " &raquo; ";
      }
      if (values.label) {
        this.$el.html(this.template({
          text: displayText
        }));
      }
      if (values.className) {
        this.$el.attr('class', values.className);
      }
      if (values.href) {
        this.$el.attr('href', values.href);
      }
      if (values.link) {
        this.$el.attr('id', values.link);
      }
      if (values.event) {
        this.events = {
          'click': values.event
        };
      }
      this.render();
      if (values.link) {
        this._createSubMenu(values.items, values.link);
      }
      if (values.triggerShow) {
        return this.check(true);
      }
    };

    LayersMenuViewItem.prototype.render = function() {
      $("#" + this.parent).append(this.el);
      return this;
    };

    LayersMenuViewItem.prototype._createSubMenu = function(items, id) {
      var attrs;
      attrs = {
        className: 'dropdown-menu submenu-hide',
        id: "sub-" + id,
        parentId: id,
        menuItems: items
      };
      return new $a.LayersMenuView(attrs);
    };

    LayersMenuViewItem.prototype.check = function(show) {
      if (show) {
        return this.$el.addClass("icon-ok");
      } else {
        return this.$el.removeClass("icon-ok");
      }
    };

    LayersMenuViewItem.prototype.toggleVisible = function() {
      if (this.isShowing) {
        $a.broker.trigger(this.triggerHide);
        this.isShowing = false;
        return this.check(false);
      } else {
        $a.broker.trigger(this.triggerShow);
        this.isShowing = true;
        return this.check(true);
      }
    };

    return LayersMenuViewItem;

  })(Backbone.View);

}).call(this);
