// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.TreeParentItemView = (function(_super) {
    var $a;

    __extends(TreeParentItemView, _super);

    function TreeParentItemView() {
      return TreeParentItemView.__super__.constructor.apply(this, arguments);
    }

    $a = window.sirius;

    TreeParentItemView.prototype.tagName = 'li';

    TreeParentItemView.prototype.className = 'tree-parent-node';

    TreeParentItemView.prototype.initialize = function(element) {
      var params;
      this.template = _.template($("#parent-item-tree-template").html());
      params = {
        textLower: $a.Util.toLowerCaseAndDashed(element),
        text: element
      };
      this.$el.html(this.template(params));
      $a.broker.on('app:parent_tree', this.render, this);
      return $a.broker.on('app:tree_clear', this.removeItem, this);
    };

    TreeParentItemView.prototype.render = function() {
      $("#tree").append(this.el);
      return this;
    };

    TreeParentItemView.prototype.removeItem = function() {
      $(this.el).remove();
      $a.broker.off('app:parent_tree');
      return $a.broker.off('app:tree_clear');
    };

    return TreeParentItemView;

  })(Backbone.View);

}).call(this);
