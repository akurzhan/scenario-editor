// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.SensorCollection = (function(_super) {
    var $a;

    __extends(SensorCollection, _super);

    function SensorCollection() {
      return SensorCollection.__super__.constructor.apply(this, arguments);
    }

    $a = window.sirius;

    SensorCollection.prototype.model = $a.Sensor;

    SensorCollection.prototype.initialize = function(models) {
      this.models = models;
      return this.models.forEach(function(sensor) {
        return sensor.set('selected', false);
      });
    };

    SensorCollection.prototype.getBrowserColumnData = function() {
      return this.models.map(function(sensor) {
        return [sensor.get('id'), sensor.get('type'), sensor.get('link_type'), sensor.get('link_reference').get('id'), sensor.get('description').get('text')];
      });
    };

    SensorCollection.prototype.setSelected = function(sensors) {
      return _.each(sensors, function(sensor) {
        if (!sensor.get('selected')) {
          return sensor.set('selected', true);
        }
      });
    };

    return SensorCollection;

  })(Backbone.Collection);

}).call(this);
