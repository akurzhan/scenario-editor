// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.ContextMenuView = (function(_super) {
    var $a;

    __extends(ContextMenuView, _super);

    $a = window.sirius;

    ContextMenuView.prototype.el = {};

    function ContextMenuView(options) {
      var _this = this;
      this.options = options;
      this.template = _.template($('#context-menu-template').html());
      this.el = this.template({
        elemId: this.options.id,
        elemClass: this.options["class"]
      });
      this.pixelOffset = this.options.pixelOffset || new google.maps.Point(0, 0);
      this.isVisible = false;
      this.position = new google.maps.LatLng(0, 0);
      google.maps.event.addDomListener(window, 'click', (function() {
        return _this.hide();
      }));
      $a.broker.on('map:hide_context_menus', this.hide, this);
    }

    ContextMenuView.prototype.draw = function() {
      var left, mapSize, menuSize, mousePosition, oHeight, oWidth, top;
      if (this.isVisible) {
        oWidth = $("#" + this.options.id).offsetWidth;
        oHeight = $("#" + this.options.id).offsetHeight;
        mapSize = new google.maps.Size(oWidth, oHeight);
        menuSize = new google.maps.Size(oWidth, oHeight);
        if (this.position instanceof google.maps.LatLng) {
          mousePosition = this.getProjection().fromLatLngToContainerPixel(this.position);
        } else {
          mousePosition = this.position;
        }
        left = mousePosition.x;
        top = mousePosition.y;
        if (mousePosition.x > mapSize.width - menuSize.width - this.pixelOffset.x) {
          left = left - menuSize.width - this.pixelOffset.x;
        } else {
          left += this.pixelOffset.x;
        }
        if (mousePosition.y > mapSize.height - menuSize.height - this.pixelOffset.y) {
          top = top - menuSize.height - this.pixelOffset.y;
        } else {
          top += this.pixelOffset.y;
        }
        return $("#" + this.options.id).css({
          top: "" + top + "px",
          left: "" + left + "px"
        });
      }
    };

    ContextMenuView.prototype.hide = function() {
      this.setMap(null);
      if (this.isVisible) {
        $("#" + this.options.id).hide();
        return this.isVisible = false;
      }
    };

    ContextMenuView.prototype.show = function(position) {
      $a.broker.trigger('map:hide_context_menus');
      $("body").append(this.el);
      this.position = position;
      this.setMap($a.map);
      if (!this.isVisible) {
        $("#" + this.options.id).show();
        return this.isVisible = true;
      }
    };

    ContextMenuView.prototype.onAdd = function() {
      var _this = this;
      return _.each(this.options.menuItems, function(item) {
        return new $a.ContextMenuItemView(_this.options.id, item);
      });
    };

    ContextMenuView.prototype.onRemove = function() {
      return $("#" + this.options.id).remove();
    };

    ContextMenuView.prototype.getVisible = function() {
      return this.isVisible;
    };

    return ContextMenuView;

  })(google.maps.OverlayView);

}).call(this);
