// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.sirius.MapEventView = (function(_super) {
    var $a;

    __extends(MapEventView, _super);

    function MapEventView() {
      return MapEventView.__super__.constructor.apply(this, arguments);
    }

    MapEventView.ICON = 'event-deselected';

    MapEventView.SELECTED_ICON = 'event-selected';

    $a = window.sirius;

    MapEventView.prototype.initialize = function(model) {
      MapEventView.__super__.initialize.call(this, model);
      $a.broker.on('map:hide_event_layer', this.hideMarker, this);
      return $a.broker.on('map:show_event_layer', this.showMarker, this);
    };

    MapEventView.prototype.getIcon = function() {
      return MapEventView.__super__.getIcon.call(this, MapEventView.ICON);
    };

    MapEventView.prototype.removeElement = function() {
      $a.broker.off('map:hide_event_layer');
      $a.broker.off('map:show_event_layer');
      return MapEventView.__super__.removeElement.apply(this, arguments);
    };

    MapEventView.prototype.manageMarkerSelect = function() {
      var iconName;
      iconName = MapEventView.__super__._getIconName.apply(this, []);
      if (iconName === ("" + MapEventView.ICON + ".png")) {
        this._triggerClearSelectEvents();
        $a.broker.trigger("app:tree_highlight:" + this.model.cid);
        return this.makeSelected();
      } else {
        this._triggerClearSelectEvents();
        return this.clearSelected();
      }
    };

    MapEventView.prototype._triggerClearSelectEvents = function() {
      if (!$a.SHIFT_DOWN) {
        $a.broker.trigger('map:clear_selected');
      }
      if (!$a.SHIFT_DOWN) {
        return $a.broker.trigger('app:tree_remove_highlight');
      }
    };

    MapEventView.prototype.makeSelected = function() {
      var _this = this;
      _.each(this.model.get('targetreferences'), function(link) {
        $a.broker.trigger("map:select_item:" + link.cid);
        return $a.broker.trigger("app:tree_highlight:" + link.cid);
      });
      return MapEventView.__super__.makeSelected.call(this, MapEventView.SELECTED_ICON);
    };

    MapEventView.prototype.clearSelected = function() {
      return MapEventView.__super__.clearSelected.call(this, MapEventView.ICON);
    };

    return MapEventView;

  })(window.sirius.MapMarkerView);

}).call(this);
